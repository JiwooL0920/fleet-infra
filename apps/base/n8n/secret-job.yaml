---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: secret-creator
  namespace: n8n
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: secret-creator
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: secret-creator-n8n
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: secret-creator
subjects:
- kind: ServiceAccount
  name: secret-creator
  namespace: n8n
---
apiVersion: batch/v1
kind: Job
metadata:
  name: n8n-postgres-secret-creator
  namespace: n8n
spec:
  template:
    spec:
      serviceAccountName: secret-creator
      restartPolicy: OnFailure
      containers:
      - name: secret-creator
        image: bitnami/kubectl:latest
        command:
        - /bin/bash
        - -c
        - |
          set -e
          echo "Creating n8n-postgres-credentials secret..."
          
          # Wait for source secret to be available
          until kubectl get secret postgresql-cluster-app -n cnpg-system; do
            echo "Waiting for postgresql-cluster-app secret..."
            sleep 5
          done
          
          # Extract values from PostgreSQL secret
          POSTGRES_HOST="postgresql-cluster-rw.cnpg-system.svc.cluster.local"
          POSTGRES_PORT="5432"
          POSTGRES_DATABASE="n8n"
          POSTGRES_USERNAME=$(kubectl get secret postgresql-cluster-app -n cnpg-system -o jsonpath='{.data.username}' | base64 -d)
          POSTGRES_PASSWORD=$(kubectl get secret postgresql-cluster-app -n cnpg-system -o jsonpath='{.data.password}' | base64 -d)
          
          # Create the secret for N8N
          kubectl create secret generic n8n-postgres-credentials \
            --from-literal=POSTGRES_HOST="$POSTGRES_HOST" \
            --from-literal=POSTGRES_PORT="$POSTGRES_PORT" \
            --from-literal=POSTGRES_DATABASE="$POSTGRES_DATABASE" \
            --from-literal=POSTGRES_USERNAME="$POSTGRES_USERNAME" \
            --from-literal=POSTGRES_PASSWORD="$POSTGRES_PASSWORD" \
            --dry-run=client -o yaml | kubectl apply -f -
          
          echo "n8n-postgres-credentials secret created successfully"