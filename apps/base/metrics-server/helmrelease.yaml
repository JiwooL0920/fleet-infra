---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: metrics-server
  namespace: flux-system
spec:
  interval: 5m
  url: https://kubernetes-sigs.github.io/metrics-server/
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: metrics-server
  namespace: flux-system
spec:
  interval: 5m
  releaseName: metrics-server
  targetNamespace: kube-system
  install:
    createNamespace: false  # kube-system already exists
    timeout: 5m
    remediation:
      retries: 3
  upgrade:
    timeout: 5m
    remediation:
      retries: 3
  chart:
    spec:
      chart: metrics-server
      version: "3.12.2"
      sourceRef:
        kind: HelmRepository
        name: metrics-server
        namespace: flux-system
      interval: 5m
  values:
    # Metrics server configuration
    replicas: 1
    
    # Image configuration
    image:
      repository: registry.k8s.io/metrics-server/metrics-server
      tag: v0.7.2
      pullPolicy: IfNotPresent
    
    # Resources
    resources:
      limits:
        cpu: 100m
        memory: 200Mi
      requests:
        cpu: 50m
        memory: 100Mi
    
    # Args for local development (kind/colima clusters)
    args:
      - --cert-dir=/tmp
      - --secure-port=10250
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --kubelet-use-node-status-port
      - --metric-resolution=15s
      - --kubelet-insecure-tls  # Required for local development
    
    # Service configuration
    service:
      type: ClusterIP
      port: 443
      annotations: {}
    
    # ServiceAccount
    serviceAccount:
      create: true
      name: metrics-server
      annotations: {}
    
    # RBAC
    rbac:
      create: true
    
    # API service configuration
    apiService:
      create: true
      insecureSkipTLSVerify: true  # Required for local development
      annotations: {}
    
    # Security context
    securityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop:
          - ALL
    
    # Container security context
    containerSecurityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop:
          - ALL
    
    # Node selector and tolerations
    nodeSelector: {}
    tolerations: []
    affinity: {}
    
    # Deployment strategy
    deploymentStrategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 1
    
    # Pod disruption budget
    podDisruptionBudget:
      enabled: false
      minAvailable: 1
    
    # Priority class
    priorityClassName: system-cluster-critical
    
    # Monitoring
    serviceMonitor:
      enabled: false  # Enable if using Prometheus Operator
      additionalLabels: {}
      interval: 30s